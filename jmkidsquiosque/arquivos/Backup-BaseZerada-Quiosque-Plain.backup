--
-- PostgreSQL database dump
--

-- Dumped from database version 9.4.19
-- Dumped by pg_dump version 9.5.5

-- Started on 2019-06-06 09:47:44

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;
SET row_security = off;

--
-- TOC entry 9 (class 2615 OID 24502855)
-- Name: nuvem; Type: SCHEMA; Schema: -; Owner: jmkids
--

CREATE SCHEMA nuvem;


ALTER SCHEMA nuvem OWNER TO jmkids;

--
-- TOC entry 8 (class 2615 OID 24502856)
-- Name: quiosque; Type: SCHEMA; Schema: -; Owner: jmkids
--

CREATE SCHEMA quiosque;


ALTER SCHEMA quiosque OWNER TO jmkids;

--
-- TOC entry 1 (class 3079 OID 11855)
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- TOC entry 2205 (class 0 OID 0)
-- Dependencies: 1
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = public, pg_catalog;

--
-- TOC entry 213 (class 1255 OID 24503165)
-- Name: alterou_campo(anyelement, anyelement); Type: FUNCTION; Schema: public; Owner: jmkids
--

CREATE FUNCTION alterou_campo(anterior anyelement, novo anyelement) RETURNS boolean
    LANGUAGE plpgsql IMMUTABLE
    AS $$
DECLARE
   v_aux boolean := false;
   
BEGIN
   if ((anterior is null) and (novo is not null)) then
      v_aux := true;
   elseif ((anterior is not null) and (novo is null)) then
      v_aux := true;
   elseif ((anterior is not null) and (novo is not null) and (anterior <> novo)) then
      v_aux := true;
   end if;

   RETURN v_aux;
END;
$$;


ALTER FUNCTION public.alterou_campo(anterior anyelement, novo anyelement) OWNER TO jmkids;

--
-- TOC entry 2206 (class 0 OID 0)
-- Dependencies: 213
-- Name: FUNCTION alterou_campo(anterior anyelement, novo anyelement); Type: COMMENT; Schema: public; Owner: jmkids
--

COMMENT ON FUNCTION alterou_campo(anterior anyelement, novo anyelement) IS 'Retorna true se houve qualquer alteração no campo quanto ao seu valor anterior e o novo valor';


--
-- TOC entry 214 (class 1255 OID 24503166)
-- Name: valores_iguais(anyelement, anyelement); Type: FUNCTION; Schema: public; Owner: jmkids
--

CREATE FUNCTION valores_iguais(campo1 anyelement, campo2 anyelement) RETURNS boolean
    LANGUAGE plpgsql IMMUTABLE
    AS $$
DECLARE
   v_aux boolean := false;
   
BEGIN
   if ((campo1 is null) and (campo2 is null)) then
      v_aux := true;
   elseif ((campo1 is not null) and (campo2 is null)) then
      v_aux := false;
   elseif ((campo1 is null) and (campo2 is not null)) then
      v_aux := false;   
   elseif ((campo1 is not null) and (campo2 is not null) and (campo1 = campo2)) then
      v_aux := true;
   else
      v_aux := false;   
   end if;

   RETURN v_aux;
END;
$$;


ALTER FUNCTION public.valores_iguais(campo1 anyelement, campo2 anyelement) OWNER TO jmkids;

--
-- TOC entry 2207 (class 0 OID 0)
-- Dependencies: 214
-- Name: FUNCTION valores_iguais(campo1 anyelement, campo2 anyelement); Type: COMMENT; Schema: public; Owner: jmkids
--

COMMENT ON FUNCTION valores_iguais(campo1 anyelement, campo2 anyelement) IS 'Retorna true se os campos possuem o mesmo conteúdo ou ambos são null. Se não retorna false.';


SET search_path = quiosque, pg_catalog;

--
-- TOC entry 215 (class 1255 OID 24503167)
-- Name: brinquedooperacao_aiud(); Type: FUNCTION; Schema: quiosque; Owner: jmkids
--

CREATE FUNCTION brinquedooperacao_aiud() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
   -- -----------------------------------------------
   -- OPERAÇÕES COMUNS A INSERT E UPDATE
   -- -----------------------------------------------
   IF ((TG_OP = 'INSERT') or (TG_OP = 'UPDATE')) THEN      
        
       
   END IF;
   -- ------------------------
   -- OPERAÇÕES SÓ PARA INSERT
   -- ------------------------
   IF (TG_OP = 'INSERT') THEN
      INSERT INTO quiosque.caixamovimento(
            id, descricao, operacao, 
			valor, versao, caixa_id, 
			quiosque_id, brinquedooperacao_id, formapagamento_id, datahora)
	  VALUES (nextval('quiosque.caixamovimentoid'), 'Pré-Pago - Recebido na contratação de brinquedo', 'Entrada', 
	         new.valorprepago, 0, new.caixa_id, 
			 new.quiosque_id, new.id, new.formaprepago_id, current_timestamp);
          
      RETURN NEW;  
   -- ---------------------------
   -- OPERAÇÕES SÓ PARA UPDATE
   -- ---------------------------
   ELSEIF (TG_OP = 'UPDATE') THEN   
          
		  
		IF (public.alterou_campo(old.valorprepago, new.valorprepago)) THEN
			IF (old.valorprepago = 0 AND new.valorprepago > 0) THEN	  
			  INSERT INTO quiosque.caixamovimento(
				id, descricao, operacao, 
				valor, versao, caixa_id, datahora,
				quiosque_id, brinquedooperacao_id, formapagamento_id)
			  VALUES (nextval('quiosque.caixamovimentoid'), 'Pré-Pago - Recebimento na ativação de brinquedo', 'Entrada', 
				 new.valorprepago, 0, new.caixa_id, current_timestamp,
				 new.quiosque_id, new.id, new.formaprepago_id);	  
			ELSEIF (old.valorprepago > 0 AND new.valorprepago = 0) THEN	  
			  INSERT INTO quiosque.caixamovimento(
				id, descricao, operacao, 
				valor, versao, caixa_id, datahora,
				quiosque_id, brinquedooperacao_id, formapagamento_id)
			  VALUES (nextval('quiosque.caixamovimentoid'), 'Pré-Pago - Estorno ref. ativação de brinquedo', 'Saida', 
				 old.valorprepago, 0, new.caixa_id, current_timestamp,
				 new.quiosque_id, new.id, old.formaprepago_id);	 
            ELSEIF (old.valorprepago > new.valorprepago) THEN	  
			  INSERT INTO quiosque.caixamovimento(
				id, descricao, operacao, 
				valor, versao, caixa_id, datahora,
				quiosque_id, brinquedooperacao_id, formapagamento_id)
			  VALUES (nextval('quiosque.caixamovimentoid'), 'Pré-Pago - Alterado valor de recebimento ref. ativação de brinquedo', 'Saida', 
				 (old.valorprepago - new.valorprepago), 0, new.caixa_id, current_timestamp,
				 new.quiosque_id, new.id, old.formaprepago_id);	  				 
			ELSEIF (old.valorprepago < new.valorprepago) THEN	  
			  INSERT INTO quiosque.caixamovimento(
				id, descricao, operacao, 
				valor, versao, caixa_id, datahora,
				quiosque_id, brinquedooperacao_id, formapagamento_id)
			  VALUES (nextval('quiosque.caixamovimentoid'), 'Pré-Pago - Alterado valor de recebimento ref. ativação de brinquedo', 'Entrada', 
				 (new.valorprepago - old.valorprepago), 0, new.caixa_id, current_timestamp,
				 new.quiosque_id, new.id, new.formaprepago_id);	  				 	 
			END IF;			
        END IF;
		
		  
		  
		  
	    IF (public.alterou_campo(old.valorpospago, new.valorpospago)) THEN
			IF (old.valorpospago = 0 AND new.valorpospago > 0) THEN	  
			  INSERT INTO quiosque.caixamovimento(
				id, descricao, operacao, 
				valor, versao, caixa_id, datahora,
				quiosque_id, brinquedooperacao_id, formapagamento_id)
			  VALUES (nextval('quiosque.caixamovimentoid'), 'Pós-Pago - Recebimento na inativação de brinquedo', 'Entrada', 
				 new.valorpospago, 0, new.caixa_id, current_timestamp,
				 new.quiosque_id, new.id, new.formapospago_id);	  
			ELSEIF (old.valorpospago > 0 AND new.valorpospago = 0) THEN	  
			  INSERT INTO quiosque.caixamovimento(
				id, descricao, operacao, 
				valor, versao, caixa_id, datahora,
				quiosque_id, brinquedooperacao_id, formapagamento_id)
			  VALUES (nextval('quiosque.caixamovimentoid'), 'Pós-Pago - Estorno ref. inativação de brinquedo', 'Saida', 
				 old.valorpospago, 0, new.caixa_id, current_timestamp,
				 new.quiosque_id, new.id, old.formapospago_id);	 
            ELSEIF (old.valorpospago > new.valorpospago) THEN	  
			  INSERT INTO quiosque.caixamovimento(
				id, descricao, operacao, 
				valor, versao, caixa_id, datahora,
				quiosque_id, brinquedooperacao_id, formapagamento_id)
			  VALUES (nextval('quiosque.caixamovimentoid'), 'Pós-Pago - Alterado valor de recebimento ref. inativação de brinquedo', 'Saida', 
				 (old.valorpospago - new.valorpospago), 0, new.caixa_id, current_timestamp,
				 new.quiosque_id, new.id, old.formapospago_id);	  				 
			ELSEIF (old.valorpospago < new.valorpospago) THEN	  
			  INSERT INTO quiosque.caixamovimento(
				id, descricao, operacao, 
				valor, versao, caixa_id, datahora,
				quiosque_id, brinquedooperacao_id, formapagamento_id)
			  VALUES (nextval('quiosque.caixamovimentoid'), 'Pós-Pago - Alterado valor de recebimento ref. inativação de brinquedo', 'Entrada', 
				 (new.valorpospago - old.valorpospago), 0, new.caixa_id, current_timestamp,
				 new.quiosque_id, new.id, new.formapospago_id);	  				 	 
			END IF;			
        END IF;
		
		
		
	    IF (public.alterou_campo(old.valordesconto, new.valordesconto)) THEN
			IF (old.valordesconto = 0 AND new.valordesconto > 0) THEN	  
			  INSERT INTO quiosque.caixamovimento(
				id, descricao, operacao, 
				valor, versao, caixa_id, datahora,
				quiosque_id, brinquedooperacao_id, formapagamento_id)
			  VALUES (nextval('quiosque.caixamovimentoid'), 'Pós-Pago - Desconto na inativação de brinquedo', 'Saida', 
				 new.valordesconto, 0, new.caixa_id, current_timestamp,
				 new.quiosque_id, new.id, new.formapospago_id);	  
			ELSEIF (old.valordesconto > 0 AND new.valordesconto = 0) THEN	  
			  INSERT INTO quiosque.caixamovimento(
				id, descricao, operacao, 
				valor, versao, caixa_id, datahora,
				quiosque_id, brinquedooperacao_id, formapagamento_id)
			  VALUES (nextval('quiosque.caixamovimentoid'), 'Pós-Pago - Estorno desconto ref. inativação de brinquedo', 'Entrada', 
				 old.valordesconto, 0, new.caixa_id, current_timestamp,
				 new.quiosque_id, new.id, old.formapospago_id);	 
            ELSEIF (old.valordesconto > new.valordesconto) THEN	  
			  INSERT INTO quiosque.caixamovimento(
				id, descricao, operacao, 
				valor, versao, caixa_id, datahora,
				quiosque_id, brinquedooperacao_id, formapagamento_id)
			  VALUES (nextval('quiosque.caixamovimentoid'), 'Pós-Pago - Alterado valor de desconto ref. inativação de brinquedo', 'Entrada', 
				 (old.valordesconto - new.valordesconto), 0, new.caixa_id, current_timestamp,
				 new.quiosque_id, new.id, old.formapospago_id);	  				 
			ELSEIF (old.valordesconto < new.valordesconto) THEN	  
			  INSERT INTO quiosque.caixamovimento(
				id, descricao, operacao, 
				valor, versao, caixa_id, datahora,
				quiosque_id, brinquedooperacao_id, formapagamento_id)
			  VALUES (nextval('quiosque.caixamovimentoid'), 'Pós-Pago - Alterado valor de recebimento ref. inativação de brinquedo', 'Saida', 
				 (new.valordesconto - old.valordesconto), 0, new.caixa_id, current_timestamp,
				 new.quiosque_id, new.id, new.formapospago_id);	  				 	 
			END IF;			
        END IF;		
		
		
		
		
		
	    IF (public.alterou_campo(old.valorcreditoconcedido, new.valorcreditoconcedido)) THEN
			IF (old.valorcreditoconcedido = 0 AND new.valorcreditoconcedido > 0) THEN	  
			  INSERT INTO quiosque.caixamovimento(
				id, descricao, operacao, 
				valor, versao, caixa_id, datahora,
				quiosque_id, brinquedooperacao_id, formapagamento_id)
			  VALUES (nextval('quiosque.caixamovimentoid'), 'Pós-Pago - Crédito na inativação de brinquedo', 'Saida', 
				 new.valorcreditoconcedido, 0, new.caixa_id, current_timestamp,
				 new.quiosque_id, new.id, new.formapospago_id);	  
			ELSEIF (old.valorcreditoconcedido > 0 AND new.valorcreditoconcedido = 0) THEN	  
			  INSERT INTO quiosque.caixamovimento(
				id, descricao, operacao, 
				valor, versao, caixa_id, datahora,
				quiosque_id, brinquedooperacao_id, formapagamento_id)
			  VALUES (nextval('quiosque.caixamovimentoid'), 'Pós-Pago - Estorno crédito ref. inativação de brinquedo', 'Entrada', 
				 old.valorcreditoconcedido, 0, new.caixa_id, current_timestamp,
				 new.quiosque_id, new.id, old.formapospago_id);	 
            ELSEIF (old.valorcreditoconcedido > new.valorcreditoconcedido) THEN	  
			  INSERT INTO quiosque.caixamovimento(
				id, descricao, operacao, 
				valor, versao, caixa_id, datahora,
				quiosque_id, brinquedooperacao_id, formapagamento_id)
			  VALUES (nextval('quiosque.caixamovimentoid'), 'Pós-Pago - Alterado valor de crédito ref. inativação de brinquedo', 'Entrada', 
				 (old.valorcreditoconcedido - new.valorcreditoconcedido), 0, new.caixa_id, current_timestamp,
				 new.quiosque_id, new.id, old.formapospago_id);	  				 
			ELSEIF (old.valorcreditoconcedido < new.valorcreditoconcedido) THEN	  
			  INSERT INTO quiosque.caixamovimento(
				id, descricao, operacao, 
				valor, versao, caixa_id, datahora,
				quiosque_id, brinquedooperacao_id, formapagamento_id)
			  VALUES (nextval('quiosque.caixamovimentoid'), 'Pós-Pago - Alterado valor de crédito ref. inativação de brinquedo', 'Saida', 
				 (new.valorcreditoconcedido - old.valorcreditoconcedido), 0, new.caixa_id, current_timestamp,
				 new.quiosque_id, new.id, new.formapospago_id);	  				 	 
			END IF;			
        END IF;		
		
		
		
		
		
		
		IF (public.alterou_campo(old.datahoracancelamento, new.datahoracancelamento)) THEN
		
		    IF (old.datahoracancelamento is null AND new.datahoracancelamento is not null) then	  
			  INSERT INTO quiosque.caixamovimento(
				id, descricao, operacao, 
				valor, versao, caixa_id, datahora,
				quiosque_id, brinquedooperacao_id, formapagamento_id)
			  VALUES (nextval('quiosque.caixamovimentoid'), 'Pré-Pago - Cancelamento de brinquedo', 'Saida', 
				 old.valorprepago, 0, new.caixa_id, current_timestamp,
				 new.quiosque_id, new.id, new.formaprepago_id);	 
		    ELSEIF (old.datahoracancelamento is not null AND new.datahoracancelamento is null) THEN	  
			  INSERT INTO quiosque.caixamovimento(
				id, descricao, operacao, 
				valor, versao, caixa_id, datahora,
				quiosque_id, brinquedooperacao_id, formapagamento_id)
			  VALUES (nextval('quiosque.caixamovimentoid'), 'Pré-Pago - Estorno de Cancelamento de brinquedo', 'Entrada', 
				 old.valorprepago, 0, new.caixa_id, current_timestamp,
				 new.quiosque_id, new.id, new.formaprepago_id);	 
			END IF;  		
			
        END IF;
		
      RETURN NEW;  
   -- ---------------------------   
   -- OPERAÇÕES SÓ PARA DELETE
   -- ---------------------------   
   ELSEIF (TG_OP = 'DELETE') THEN   
      
      
      RETURN OLD;
   END IF;
END;
$$;


ALTER FUNCTION quiosque.brinquedooperacao_aiud() OWNER TO jmkids;

--
-- TOC entry 216 (class 1255 OID 24503169)
-- Name: brinquedooperacao_biud(); Type: FUNCTION; Schema: quiosque; Owner: jmkids
--

CREATE FUNCTION brinquedooperacao_biud() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN   
   -- -----------------------------------------------
   -- OPERAÇÕES COMUNS A INSERT E UPDATE
   -- -----------------------------------------------
   IF ((TG_OP = 'INSERT') or (TG_OP = 'UPDATE')) THEN       
        
       
   END IF;
   -- ------------------------
   -- OPERAÇÕES SÓ PARA INSERT
   -- ------------------------
   IF (TG_OP = 'INSERT') THEN
      new.log = to_char(new.datahoracontratado, 'dd/MM/yyyy HH24:MI:SS')||E' - Data e hora da contratado. \n';
	  
      RETURN NEW;  
   -- ---------------------------
   -- OPERAÇÕES SÓ PARA UPDATE
   -- ---------------------------
   ELSEIF (TG_OP = 'UPDATE') THEN   
      -- Logs das operações
      if (public.alterou_campo(old.datahoraativacao, new.datahoraativacao)) then
         new.log = new.log||to_char(new.datahoraativacao, 'dd/MM/yyyy HH24:MI:SS')||E' - Alterou data e hora da ativacao. \n';
      end if;  
      if (public.alterou_campo(old.datahoracancelamento, new.datahoracancelamento)) then
         new.log = new.log||to_char(new.datahoracancelamento, 'dd/MM/yyyy HH24:MI:SS')||E' - Alterou data e hora de cancelamento. \n';
      end if;  
      if (public.alterou_campo(old.datahoracontratado, new.datahoracontratado)) then
         new.log = new.log||to_char(new.datahoracontratado, 'dd/MM/yyyy HH24:MI:SS')||E' - Alterou data e hora contratado. \n';
      end if;  
      if (public.alterou_campo(old.datahoraempausa, new.datahoraempausa)) then
	     if (new.datahoraempausa is not null) then 
            new.log = new.log||to_char(new.datahoraempausa, 'dd/MM/yyyy HH24:MI:SS')||E' - Alterou data e hora em pausa. \n';
		 else
            new.log = new.log||to_char(current_timestamp, 'dd/MM/yyyy HH24:MI:SS')||E' - Alterou data e hora em pausa. \n';
         end if; 		 
      end if;  
      if (public.alterou_campo(old.datahorainativacao, new.datahorainativacao)) then
         new.log = new.log||to_char(new.datahorainativacao, 'dd/MM/yyyy HH24:MI:SS')||E' - Alterou data e hora de inativação. \n';
      end if;  
          
          
      RETURN NEW;  
   -- ---------------------------   
   -- OPERAÇÕES SÓ PARA DELETE
   -- ---------------------------   
   ELSEIF (TG_OP = 'DELETE') THEN   
      
      
      RETURN OLD;
   END IF;
END;
$$;


ALTER FUNCTION quiosque.brinquedooperacao_biud() OWNER TO jmkids;

SET search_path = nuvem, pg_catalog;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- TOC entry 175 (class 1259 OID 24502857)
-- Name: brinquedo; Type: TABLE; Schema: nuvem; Owner: jmkids
--

CREATE TABLE brinquedo (
    id bigint NOT NULL,
    chave character varying(60),
    dataaquisicao date,
    datahoradesabilitado timestamp without time zone,
    descricao character varying(60),
    foto bytea,
    inftecnicas text,
    motivodesabilitado text,
    tempominimo integer,
    valoraquisicao double precision,
    versao integer
);


ALTER TABLE brinquedo OWNER TO jmkids;

--
-- TOC entry 176 (class 1259 OID 24502865)
-- Name: brinquedonoquiosque; Type: TABLE; Schema: nuvem; Owner: jmkids
--

CREATE TABLE brinquedonoquiosque (
    id bigint NOT NULL,
    contratado boolean,
    datahoraativacao timestamp without time zone,
    datahorainativacao timestamp without time zone,
    empausa boolean,
    emuso boolean,
    versao integer,
    brinquedo_id bigint,
    quiosque_id bigint
);


ALTER TABLE brinquedonoquiosque OWNER TO jmkids;

--
-- TOC entry 177 (class 1259 OID 24502870)
-- Name: configuracao; Type: TABLE; Schema: nuvem; Owner: jmkids
--

CREATE TABLE configuracao (
    id bigint NOT NULL,
    versao integer
);


ALTER TABLE configuracao OWNER TO jmkids;

--
-- TOC entry 178 (class 1259 OID 24502875)
-- Name: formapagamento; Type: TABLE; Schema: nuvem; Owner: jmkids
--

CREATE TABLE formapagamento (
    id bigint NOT NULL,
    descricao character varying(60),
    versao integer
);


ALTER TABLE formapagamento OWNER TO jmkids;

--
-- TOC entry 179 (class 1259 OID 24502880)
-- Name: funcionario; Type: TABLE; Schema: nuvem; Owner: jmkids
--

CREATE TABLE funcionario (
    id bigint NOT NULL,
    bairro character varying(50),
    cep character varying(10),
    complemento character varying(50),
    cpf character varying(14),
    ctpsnumero character varying(10),
    ctpsserie character varying(10),
    dataadmissao date,
    datademissao date,
    email character varying(150) NOT NULL,
    endereco character varying(100),
    fonedois character varying(20),
    foneum character varying(20),
    foto bytea,
    nome character varying(255),
    nomecidade character varying(50),
    numero character varying(20),
    rg character varying(15),
    senha character varying(64),
    ufcidade character varying(20),
    versao integer
);


ALTER TABLE funcionario OWNER TO jmkids;

--
-- TOC entry 180 (class 1259 OID 24502888)
-- Name: funcionarioquiosque; Type: TABLE; Schema: nuvem; Owner: jmkids
--

CREATE TABLE funcionarioquiosque (
    id bigint NOT NULL,
    versao integer,
    funcionario_id bigint NOT NULL,
    quiosque_id bigint NOT NULL
);


ALTER TABLE funcionarioquiosque OWNER TO jmkids;

--
-- TOC entry 181 (class 1259 OID 24502893)
-- Name: grupocliente; Type: TABLE; Schema: nuvem; Owner: jmkids
--

CREATE TABLE grupocliente (
    id bigint NOT NULL,
    descricao character varying(60),
    versao integer
);


ALTER TABLE grupocliente OWNER TO jmkids;

--
-- TOC entry 182 (class 1259 OID 24502898)
-- Name: promocao; Type: TABLE; Schema: nuvem; Owner: jmkids
--

CREATE TABLE promocao (
    id bigint NOT NULL,
    cnpj character varying(18),
    cpf character varying(14),
    datahorafim timestamp without time zone,
    datahorainicio timestamp without time zone,
    descricao character varying(60),
    diadasemana integer,
    geral boolean,
    percentualdesconto real,
    versao integer,
    grupocliente_id bigint
);


ALTER TABLE promocao OWNER TO jmkids;

--
-- TOC entry 183 (class 1259 OID 24502903)
-- Name: promocaoquiosque; Type: TABLE; Schema: nuvem; Owner: jmkids
--

CREATE TABLE promocaoquiosque (
    id bigint NOT NULL,
    versao integer,
    promocao_id bigint,
    quiosque_id bigint
);


ALTER TABLE promocaoquiosque OWNER TO jmkids;

--
-- TOC entry 184 (class 1259 OID 24502908)
-- Name: quiosque; Type: TABLE; Schema: nuvem; Owner: jmkids
--

CREATE TABLE quiosque (
    id bigint NOT NULL,
    bairro character varying(60),
    cep character varying(10),
    chave character varying(60),
    complemento character varying(80),
    descricao character varying(60),
    endereco character varying(100),
    local character varying(60),
    nomecidade character varying(60),
    numero character varying(20),
    ufcidade character varying(2),
    versao integer
);


ALTER TABLE quiosque OWNER TO jmkids;

--
-- TOC entry 185 (class 1259 OID 24502916)
-- Name: tabelapreco; Type: TABLE; Schema: nuvem; Owner: jmkids
--

CREATE TABLE tabelapreco (
    id bigint NOT NULL,
    datahorafim timestamp without time zone,
    datahorainicio timestamp without time zone,
    descricao character varying(60),
    geral boolean,
    tempoflexibilizacao integer,
    valorminutoadicional real,
    versao integer,
    quiosque_id bigint
);


ALTER TABLE tabelapreco OWNER TO jmkids;

--
-- TOC entry 186 (class 1259 OID 24502921)
-- Name: tabelaprecotempo; Type: TABLE; Schema: nuvem; Owner: jmkids
--

CREATE TABLE tabelaprecotempo (
    id bigint NOT NULL,
    minutos integer,
    valor double precision,
    versao integer,
    tabelapreco_id bigint NOT NULL
);


ALTER TABLE tabelaprecotempo OWNER TO jmkids;

--
-- TOC entry 187 (class 1259 OID 24502926)
-- Name: usuario; Type: TABLE; Schema: nuvem; Owner: jmkids
--

CREATE TABLE usuario (
    id bigint NOT NULL,
    login character varying(20) NOT NULL,
    nome character varying(60) NOT NULL,
    senha character varying(64) NOT NULL
);


ALTER TABLE usuario OWNER TO jmkids;

SET search_path = quiosque, pg_catalog;

--
-- TOC entry 188 (class 1259 OID 24502935)
-- Name: brinquedooperacao; Type: TABLE; Schema: quiosque; Owner: jmkids
--

CREATE TABLE brinquedooperacao (
    id bigint NOT NULL,
    dadossemcadastro character varying(150),
    datahoraativacao timestamp without time zone,
    datahoracancelamento timestamp without time zone,
    datahoracontratado timestamp without time zone,
    datahoraempausa timestamp without time zone,
    datahorainativacao timestamp without time zone,
    justificativacancelamento character varying(150),
    justificativacredito character varying(150),
    justificativadesconto character varying(150),
    log text,
    minutoscontratados integer,
    minutosdecorridos integer,
    minutosdiferenca integer,
    tempoempausa integer,
    tempoflexibilizacao integer,
    valorcreditoconcedido double precision,
    valordesconto double precision,
    valorpospago double precision,
    valorprepago double precision,
    versao integer,
    caixa_id bigint NOT NULL,
    quiosque_id bigint NOT NULL,
    brinquedo_id bigint NOT NULL,
    cliente_cpfoucnpj character varying(20),
    formapospago_id bigint,
    formaprepago_id bigint,
    funcionarioativou_id bigint,
    funcionariocancelou_id bigint,
    funcionarioinativou_id bigint,
    funcionariopausou_id bigint,
    tabelaprecotempo_id bigint
);


ALTER TABLE brinquedooperacao OWNER TO jmkids;

--
-- TOC entry 196 (class 1259 OID 24502984)
-- Name: brinquedooperacaoid; Type: SEQUENCE; Schema: quiosque; Owner: jmkids
--

CREATE SEQUENCE brinquedooperacaoid
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE brinquedooperacaoid OWNER TO jmkids;

--
-- TOC entry 189 (class 1259 OID 24502943)
-- Name: caixa; Type: TABLE; Schema: quiosque; Owner: jmkids
--

CREATE TABLE caixa (
    id bigint NOT NULL,
    datahoraabertura timestamp without time zone,
    datahorafechamento timestamp without time zone,
    observacao text,
    valorabertura double precision,
    valorcontagem double precision,
    valordiferenca double precision,
    valorfechamento double precision,
    versao integer,
    quiosque_id bigint NOT NULL,
    funcionarioabriu_id bigint,
    funcionariofechou_id bigint
);


ALTER TABLE caixa OWNER TO jmkids;

--
-- TOC entry 197 (class 1259 OID 24502986)
-- Name: caixaid; Type: SEQUENCE; Schema: quiosque; Owner: jmkids
--

CREATE SEQUENCE caixaid
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE caixaid OWNER TO jmkids;

--
-- TOC entry 190 (class 1259 OID 24502951)
-- Name: caixamovimento; Type: TABLE; Schema: quiosque; Owner: jmkids
--

CREATE TABLE caixamovimento (
    id bigint NOT NULL,
    datahora timestamp without time zone,
    descricao character varying(100),
    operacao character varying(30),
    valor double precision,
    versao integer,
    caixa_id bigint NOT NULL,
    quiosque_id bigint NOT NULL,
    brinquedooperacao_id bigint NOT NULL,
    formapagamento_id bigint NOT NULL,
    funcionario_id bigint
);


ALTER TABLE caixamovimento OWNER TO jmkids;

--
-- TOC entry 191 (class 1259 OID 24502956)
-- Name: caixamovimentodois; Type: TABLE; Schema: quiosque; Owner: jmkids
--

CREATE TABLE caixamovimentodois (
    id bigint NOT NULL,
    datahora timestamp without time zone,
    descricao character varying(100),
    operacao character varying(30),
    valor double precision,
    versao integer,
    caixa_id bigint NOT NULL,
    quiosque_id bigint NOT NULL,
    formapagamento_id bigint NOT NULL,
    funcionario_id bigint
);


ALTER TABLE caixamovimentodois OWNER TO jmkids;

--
-- TOC entry 198 (class 1259 OID 24502988)
-- Name: caixamovimentodoisid; Type: SEQUENCE; Schema: quiosque; Owner: jmkids
--

CREATE SEQUENCE caixamovimentodoisid
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE caixamovimentodoisid OWNER TO jmkids;

--
-- TOC entry 199 (class 1259 OID 24502990)
-- Name: caixamovimentoid; Type: SEQUENCE; Schema: quiosque; Owner: jmkids
--

CREATE SEQUENCE caixamovimentoid
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE caixamovimentoid OWNER TO jmkids;

--
-- TOC entry 192 (class 1259 OID 24502961)
-- Name: cliente; Type: TABLE; Schema: quiosque; Owner: jmkids
--

CREATE TABLE cliente (
    cpfoucnpj character varying(20) NOT NULL,
    bairro character varying(50),
    celular character varying(20),
    cep character varying(10),
    complemento character varying(50),
    datahoramodificado timestamp without time zone,
    email character varying(120),
    endereco character varying(120),
    nascimento date,
    nome character varying(80),
    nomecidade character varying(60),
    numlocacoes integer,
    numero character varying(20),
    pfoupj character varying(2),
    telefonefixo character varying(20),
    ufcidade character varying(2),
    versao integer,
    grupocliente_id bigint
);


ALTER TABLE cliente OWNER TO jmkids;

--
-- TOC entry 193 (class 1259 OID 24502969)
-- Name: clientequiosque; Type: TABLE; Schema: quiosque; Owner: jmkids
--

CREATE TABLE clientequiosque (
    datahoramodificado timestamp without time zone,
    cliente_cpfoucnpj character varying(20) NOT NULL,
    quiosque_id bigint NOT NULL
);


ALTER TABLE clientequiosque OWNER TO jmkids;

--
-- TOC entry 194 (class 1259 OID 24502974)
-- Name: configuracaoquiosque; Type: TABLE; Schema: quiosque; Owner: jmkids
--

CREATE TABLE configuracaoquiosque (
    id bigint NOT NULL,
    chavequiosque character varying(60),
    idquiosque bigint,
    tempoparasincronizacao integer,
    urlintegracao character varying(200),
    versao integer
);


ALTER TABLE configuracaoquiosque OWNER TO jmkids;

--
-- TOC entry 195 (class 1259 OID 24502979)
-- Name: inativacaoforcada; Type: TABLE; Schema: quiosque; Owner: jmkids
--

CREATE TABLE inativacaoforcada (
    id bigint NOT NULL,
    datahora timestamp without time zone,
    observacao character varying(150),
    versao integer,
    caixa_id bigint NOT NULL,
    quiosque_id bigint NOT NULL,
    brinquedooperacao_id bigint NOT NULL,
    funcionario_id bigint
);


ALTER TABLE inativacaoforcada OWNER TO jmkids;

--
-- TOC entry 200 (class 1259 OID 24502992)
-- Name: inativacaoforcadaid; Type: SEQUENCE; Schema: quiosque; Owner: jmkids
--

CREATE SEQUENCE inativacaoforcadaid
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE inativacaoforcadaid OWNER TO jmkids;

SET search_path = nuvem, pg_catalog;

--
-- TOC entry 2172 (class 0 OID 24502857)
-- Dependencies: 175
-- Data for Name: brinquedo; Type: TABLE DATA; Schema: nuvem; Owner: jmkids
--

COPY brinquedo (id, chave, dataaquisicao, datahoradesabilitado, descricao, foto, inftecnicas, motivodesabilitado, tempominimo, valoraquisicao, versao) FROM stdin;
\.


--
-- TOC entry 2173 (class 0 OID 24502865)
-- Dependencies: 176
-- Data for Name: brinquedonoquiosque; Type: TABLE DATA; Schema: nuvem; Owner: jmkids
--

COPY brinquedonoquiosque (id, contratado, datahoraativacao, datahorainativacao, empausa, emuso, versao, brinquedo_id, quiosque_id) FROM stdin;
\.


--
-- TOC entry 2174 (class 0 OID 24502870)
-- Dependencies: 177
-- Data for Name: configuracao; Type: TABLE DATA; Schema: nuvem; Owner: jmkids
--

COPY configuracao (id, versao) FROM stdin;
\.


--
-- TOC entry 2175 (class 0 OID 24502875)
-- Dependencies: 178
-- Data for Name: formapagamento; Type: TABLE DATA; Schema: nuvem; Owner: jmkids
--

COPY formapagamento (id, descricao, versao) FROM stdin;
\.


--
-- TOC entry 2176 (class 0 OID 24502880)
-- Dependencies: 179
-- Data for Name: funcionario; Type: TABLE DATA; Schema: nuvem; Owner: jmkids
--

COPY funcionario (id, bairro, cep, complemento, cpf, ctpsnumero, ctpsserie, dataadmissao, datademissao, email, endereco, fonedois, foneum, foto, nome, nomecidade, numero, rg, senha, ufcidade, versao) FROM stdin;
0	\N	\N	\N	\N	\N	\N	\N	\N	fabsoft@upf.br	\N	\N	\N	\N	Sysadmin	\N	\N	\N	fabsoftpwd	\N	\N
\.


--
-- TOC entry 2177 (class 0 OID 24502888)
-- Dependencies: 180
-- Data for Name: funcionarioquiosque; Type: TABLE DATA; Schema: nuvem; Owner: jmkids
--

COPY funcionarioquiosque (id, versao, funcionario_id, quiosque_id) FROM stdin;
\.


--
-- TOC entry 2178 (class 0 OID 24502893)
-- Dependencies: 181
-- Data for Name: grupocliente; Type: TABLE DATA; Schema: nuvem; Owner: jmkids
--

COPY grupocliente (id, descricao, versao) FROM stdin;
\.


--
-- TOC entry 2179 (class 0 OID 24502898)
-- Dependencies: 182
-- Data for Name: promocao; Type: TABLE DATA; Schema: nuvem; Owner: jmkids
--

COPY promocao (id, cnpj, cpf, datahorafim, datahorainicio, descricao, diadasemana, geral, percentualdesconto, versao, grupocliente_id) FROM stdin;
\.


--
-- TOC entry 2180 (class 0 OID 24502903)
-- Dependencies: 183
-- Data for Name: promocaoquiosque; Type: TABLE DATA; Schema: nuvem; Owner: jmkids
--

COPY promocaoquiosque (id, versao, promocao_id, quiosque_id) FROM stdin;
\.


--
-- TOC entry 2181 (class 0 OID 24502908)
-- Dependencies: 184
-- Data for Name: quiosque; Type: TABLE DATA; Schema: nuvem; Owner: jmkids
--

COPY quiosque (id, bairro, cep, chave, complemento, descricao, endereco, local, nomecidade, numero, ufcidade, versao) FROM stdin;
\.


--
-- TOC entry 2182 (class 0 OID 24502916)
-- Dependencies: 185
-- Data for Name: tabelapreco; Type: TABLE DATA; Schema: nuvem; Owner: jmkids
--

COPY tabelapreco (id, datahorafim, datahorainicio, descricao, geral, tempoflexibilizacao, valorminutoadicional, versao, quiosque_id) FROM stdin;
\.


--
-- TOC entry 2183 (class 0 OID 24502921)
-- Dependencies: 186
-- Data for Name: tabelaprecotempo; Type: TABLE DATA; Schema: nuvem; Owner: jmkids
--

COPY tabelaprecotempo (id, minutos, valor, versao, tabelapreco_id) FROM stdin;
\.


--
-- TOC entry 2184 (class 0 OID 24502926)
-- Dependencies: 187
-- Data for Name: usuario; Type: TABLE DATA; Schema: nuvem; Owner: jmkids
--

COPY usuario (id, login, nome, senha) FROM stdin;
\.


SET search_path = quiosque, pg_catalog;

--
-- TOC entry 2185 (class 0 OID 24502935)
-- Dependencies: 188
-- Data for Name: brinquedooperacao; Type: TABLE DATA; Schema: quiosque; Owner: jmkids
--

COPY brinquedooperacao (id, dadossemcadastro, datahoraativacao, datahoracancelamento, datahoracontratado, datahoraempausa, datahorainativacao, justificativacancelamento, justificativacredito, justificativadesconto, log, minutoscontratados, minutosdecorridos, minutosdiferenca, tempoempausa, tempoflexibilizacao, valorcreditoconcedido, valordesconto, valorpospago, valorprepago, versao, caixa_id, quiosque_id, brinquedo_id, cliente_cpfoucnpj, formapospago_id, formaprepago_id, funcionarioativou_id, funcionariocancelou_id, funcionarioinativou_id, funcionariopausou_id, tabelaprecotempo_id) FROM stdin;
\.


--
-- TOC entry 2208 (class 0 OID 0)
-- Dependencies: 196
-- Name: brinquedooperacaoid; Type: SEQUENCE SET; Schema: quiosque; Owner: jmkids
--

SELECT pg_catalog.setval('brinquedooperacaoid', 1, false);


--
-- TOC entry 2186 (class 0 OID 24502943)
-- Dependencies: 189
-- Data for Name: caixa; Type: TABLE DATA; Schema: quiosque; Owner: jmkids
--

COPY caixa (id, datahoraabertura, datahorafechamento, observacao, valorabertura, valorcontagem, valordiferenca, valorfechamento, versao, quiosque_id, funcionarioabriu_id, funcionariofechou_id) FROM stdin;
\.


--
-- TOC entry 2209 (class 0 OID 0)
-- Dependencies: 197
-- Name: caixaid; Type: SEQUENCE SET; Schema: quiosque; Owner: jmkids
--

SELECT pg_catalog.setval('caixaid', 1, false);


--
-- TOC entry 2187 (class 0 OID 24502951)
-- Dependencies: 190
-- Data for Name: caixamovimento; Type: TABLE DATA; Schema: quiosque; Owner: jmkids
--

COPY caixamovimento (id, datahora, descricao, operacao, valor, versao, caixa_id, quiosque_id, brinquedooperacao_id, formapagamento_id, funcionario_id) FROM stdin;
\.


--
-- TOC entry 2188 (class 0 OID 24502956)
-- Dependencies: 191
-- Data for Name: caixamovimentodois; Type: TABLE DATA; Schema: quiosque; Owner: jmkids
--

COPY caixamovimentodois (id, datahora, descricao, operacao, valor, versao, caixa_id, quiosque_id, formapagamento_id, funcionario_id) FROM stdin;
\.


--
-- TOC entry 2210 (class 0 OID 0)
-- Dependencies: 198
-- Name: caixamovimentodoisid; Type: SEQUENCE SET; Schema: quiosque; Owner: jmkids
--

SELECT pg_catalog.setval('caixamovimentodoisid', 1, false);


--
-- TOC entry 2211 (class 0 OID 0)
-- Dependencies: 199
-- Name: caixamovimentoid; Type: SEQUENCE SET; Schema: quiosque; Owner: jmkids
--

SELECT pg_catalog.setval('caixamovimentoid', 1, false);


--
-- TOC entry 2189 (class 0 OID 24502961)
-- Dependencies: 192
-- Data for Name: cliente; Type: TABLE DATA; Schema: quiosque; Owner: jmkids
--

COPY cliente (cpfoucnpj, bairro, celular, cep, complemento, datahoramodificado, email, endereco, nascimento, nome, nomecidade, numlocacoes, numero, pfoupj, telefonefixo, ufcidade, versao, grupocliente_id) FROM stdin;
\.


--
-- TOC entry 2190 (class 0 OID 24502969)
-- Dependencies: 193
-- Data for Name: clientequiosque; Type: TABLE DATA; Schema: quiosque; Owner: jmkids
--

COPY clientequiosque (datahoramodificado, cliente_cpfoucnpj, quiosque_id) FROM stdin;
\.


--
-- TOC entry 2191 (class 0 OID 24502974)
-- Dependencies: 194
-- Data for Name: configuracaoquiosque; Type: TABLE DATA; Schema: quiosque; Owner: jmkids
--

COPY configuracaoquiosque (id, chavequiosque, idquiosque, tempoparasincronizacao, urlintegracao, versao) FROM stdin;
\.


--
-- TOC entry 2192 (class 0 OID 24502979)
-- Dependencies: 195
-- Data for Name: inativacaoforcada; Type: TABLE DATA; Schema: quiosque; Owner: jmkids
--

COPY inativacaoforcada (id, datahora, observacao, versao, caixa_id, quiosque_id, brinquedooperacao_id, funcionario_id) FROM stdin;
\.


--
-- TOC entry 2212 (class 0 OID 0)
-- Dependencies: 200
-- Name: inativacaoforcadaid; Type: SEQUENCE SET; Schema: quiosque; Owner: jmkids
--

SELECT pg_catalog.setval('inativacaoforcadaid', 1, false);


SET search_path = nuvem, pg_catalog;

--
-- TOC entry 1982 (class 2606 OID 24502864)
-- Name: brinquedo_pkey; Type: CONSTRAINT; Schema: nuvem; Owner: jmkids
--

ALTER TABLE ONLY brinquedo
    ADD CONSTRAINT brinquedo_pkey PRIMARY KEY (id);


--
-- TOC entry 1984 (class 2606 OID 24502869)
-- Name: brinquedonoquiosque_pkey; Type: CONSTRAINT; Schema: nuvem; Owner: jmkids
--

ALTER TABLE ONLY brinquedonoquiosque
    ADD CONSTRAINT brinquedonoquiosque_pkey PRIMARY KEY (id);


--
-- TOC entry 1986 (class 2606 OID 24502874)
-- Name: configuracao_pkey; Type: CONSTRAINT; Schema: nuvem; Owner: jmkids
--

ALTER TABLE ONLY configuracao
    ADD CONSTRAINT configuracao_pkey PRIMARY KEY (id);


--
-- TOC entry 1988 (class 2606 OID 24502879)
-- Name: formapagamento_pkey; Type: CONSTRAINT; Schema: nuvem; Owner: jmkids
--

ALTER TABLE ONLY formapagamento
    ADD CONSTRAINT formapagamento_pkey PRIMARY KEY (id);


--
-- TOC entry 1990 (class 2606 OID 24502887)
-- Name: funcionario_pkey; Type: CONSTRAINT; Schema: nuvem; Owner: jmkids
--

ALTER TABLE ONLY funcionario
    ADD CONSTRAINT funcionario_pkey PRIMARY KEY (id);


--
-- TOC entry 1996 (class 2606 OID 24502892)
-- Name: funcionarioquiosque_pkey; Type: CONSTRAINT; Schema: nuvem; Owner: jmkids
--

ALTER TABLE ONLY funcionarioquiosque
    ADD CONSTRAINT funcionarioquiosque_pkey PRIMARY KEY (id);


--
-- TOC entry 1998 (class 2606 OID 24502897)
-- Name: grupocliente_pkey; Type: CONSTRAINT; Schema: nuvem; Owner: jmkids
--

ALTER TABLE ONLY grupocliente
    ADD CONSTRAINT grupocliente_pkey PRIMARY KEY (id);


--
-- TOC entry 2000 (class 2606 OID 24502902)
-- Name: promocao_pkey; Type: CONSTRAINT; Schema: nuvem; Owner: jmkids
--

ALTER TABLE ONLY promocao
    ADD CONSTRAINT promocao_pkey PRIMARY KEY (id);


--
-- TOC entry 2002 (class 2606 OID 24502907)
-- Name: promocaoquiosque_pkey; Type: CONSTRAINT; Schema: nuvem; Owner: jmkids
--

ALTER TABLE ONLY promocaoquiosque
    ADD CONSTRAINT promocaoquiosque_pkey PRIMARY KEY (id);


--
-- TOC entry 2004 (class 2606 OID 24502915)
-- Name: quiosque_pkey; Type: CONSTRAINT; Schema: nuvem; Owner: jmkids
--

ALTER TABLE ONLY quiosque
    ADD CONSTRAINT quiosque_pkey PRIMARY KEY (id);


--
-- TOC entry 2006 (class 2606 OID 24502920)
-- Name: tabelapreco_pkey; Type: CONSTRAINT; Schema: nuvem; Owner: jmkids
--

ALTER TABLE ONLY tabelapreco
    ADD CONSTRAINT tabelapreco_pkey PRIMARY KEY (id);


--
-- TOC entry 2008 (class 2606 OID 24502925)
-- Name: tabelaprecotempo_pkey; Type: CONSTRAINT; Schema: nuvem; Owner: jmkids
--

ALTER TABLE ONLY tabelaprecotempo
    ADD CONSTRAINT tabelaprecotempo_pkey PRIMARY KEY (id);


--
-- TOC entry 1992 (class 2606 OID 24502934)
-- Name: uk_hujfe9giwd0dwuktb8toq7op7; Type: CONSTRAINT; Schema: nuvem; Owner: jmkids
--

ALTER TABLE ONLY funcionario
    ADD CONSTRAINT uk_hujfe9giwd0dwuktb8toq7op7 UNIQUE (email);


--
-- TOC entry 1994 (class 2606 OID 24502932)
-- Name: uk_iq7jks9kmtnmm74tjfp3b80ha; Type: CONSTRAINT; Schema: nuvem; Owner: jmkids
--

ALTER TABLE ONLY funcionario
    ADD CONSTRAINT uk_iq7jks9kmtnmm74tjfp3b80ha UNIQUE (cpf);


--
-- TOC entry 2010 (class 2606 OID 24502930)
-- Name: usuario_pkey; Type: CONSTRAINT; Schema: nuvem; Owner: jmkids
--

ALTER TABLE ONLY usuario
    ADD CONSTRAINT usuario_pkey PRIMARY KEY (id);


SET search_path = quiosque, pg_catalog;

--
-- TOC entry 2012 (class 2606 OID 24502942)
-- Name: brinquedooperacao_pkey; Type: CONSTRAINT; Schema: quiosque; Owner: jmkids
--

ALTER TABLE ONLY brinquedooperacao
    ADD CONSTRAINT brinquedooperacao_pkey PRIMARY KEY (caixa_id, quiosque_id, id);


--
-- TOC entry 2014 (class 2606 OID 24502950)
-- Name: caixa_pkey; Type: CONSTRAINT; Schema: quiosque; Owner: jmkids
--

ALTER TABLE ONLY caixa
    ADD CONSTRAINT caixa_pkey PRIMARY KEY (id, quiosque_id);


--
-- TOC entry 2016 (class 2606 OID 24502955)
-- Name: caixamovimento_pkey; Type: CONSTRAINT; Schema: quiosque; Owner: jmkids
--

ALTER TABLE ONLY caixamovimento
    ADD CONSTRAINT caixamovimento_pkey PRIMARY KEY (caixa_id, quiosque_id, brinquedooperacao_id, id);


--
-- TOC entry 2018 (class 2606 OID 24502960)
-- Name: caixamovimentodois_pkey; Type: CONSTRAINT; Schema: quiosque; Owner: jmkids
--

ALTER TABLE ONLY caixamovimentodois
    ADD CONSTRAINT caixamovimentodois_pkey PRIMARY KEY (caixa_id, quiosque_id, id);


--
-- TOC entry 2020 (class 2606 OID 24502968)
-- Name: cliente_pkey; Type: CONSTRAINT; Schema: quiosque; Owner: jmkids
--

ALTER TABLE ONLY cliente
    ADD CONSTRAINT cliente_pkey PRIMARY KEY (cpfoucnpj);


--
-- TOC entry 2022 (class 2606 OID 24502973)
-- Name: clientequiosque_pkey; Type: CONSTRAINT; Schema: quiosque; Owner: jmkids
--

ALTER TABLE ONLY clientequiosque
    ADD CONSTRAINT clientequiosque_pkey PRIMARY KEY (cliente_cpfoucnpj, quiosque_id);


--
-- TOC entry 2024 (class 2606 OID 24502978)
-- Name: configuracaoquiosque_pkey; Type: CONSTRAINT; Schema: quiosque; Owner: jmkids
--

ALTER TABLE ONLY configuracaoquiosque
    ADD CONSTRAINT configuracaoquiosque_pkey PRIMARY KEY (id);


--
-- TOC entry 2026 (class 2606 OID 24502983)
-- Name: inativacaoforcada_pkey; Type: CONSTRAINT; Schema: quiosque; Owner: jmkids
--

ALTER TABLE ONLY inativacaoforcada
    ADD CONSTRAINT inativacaoforcada_pkey PRIMARY KEY (caixa_id, quiosque_id, brinquedooperacao_id, id);


--
-- TOC entry 2061 (class 2620 OID 24503168)
-- Name: brinquedooperacao_aiud; Type: TRIGGER; Schema: quiosque; Owner: jmkids
--

CREATE TRIGGER brinquedooperacao_aiud AFTER INSERT OR DELETE OR UPDATE ON quiosque.brinquedooperacao FOR EACH ROW EXECUTE PROCEDURE brinquedooperacao_aiud();


--
-- TOC entry 2062 (class 2620 OID 24503170)
-- Name: brinquedooperacao_biud; Type: TRIGGER; Schema: quiosque; Owner: jmkids
--

CREATE TRIGGER brinquedooperacao_biud BEFORE INSERT OR DELETE OR UPDATE ON quiosque.brinquedooperacao FOR EACH ROW EXECUTE PROCEDURE brinquedooperacao_biud();


SET search_path = nuvem, pg_catalog;

--
-- TOC entry 2032 (class 2606 OID 24503019)
-- Name: fk49xq4ems28swmg4vvn8qw2hgk; Type: FK CONSTRAINT; Schema: nuvem; Owner: jmkids
--

ALTER TABLE ONLY promocaoquiosque
    ADD CONSTRAINT fk49xq4ems28swmg4vvn8qw2hgk FOREIGN KEY (promocao_id) REFERENCES promocao(id);


--
-- TOC entry 2028 (class 2606 OID 24502999)
-- Name: fk74222r5njmav1g2p3kibypk5a; Type: FK CONSTRAINT; Schema: nuvem; Owner: jmkids
--

ALTER TABLE ONLY brinquedonoquiosque
    ADD CONSTRAINT fk74222r5njmav1g2p3kibypk5a FOREIGN KEY (quiosque_id) REFERENCES quiosque(id);


--
-- TOC entry 2035 (class 2606 OID 24503034)
-- Name: fk8fifhajkjcliqit32f4l3ngrx; Type: FK CONSTRAINT; Schema: nuvem; Owner: jmkids
--

ALTER TABLE ONLY tabelaprecotempo
    ADD CONSTRAINT fk8fifhajkjcliqit32f4l3ngrx FOREIGN KEY (tabelapreco_id) REFERENCES tabelapreco(id);


--
-- TOC entry 2029 (class 2606 OID 24503004)
-- Name: fkcw26ykdol8d5kptnti4q8i7ye; Type: FK CONSTRAINT; Schema: nuvem; Owner: jmkids
--

ALTER TABLE ONLY funcionarioquiosque
    ADD CONSTRAINT fkcw26ykdol8d5kptnti4q8i7ye FOREIGN KEY (funcionario_id) REFERENCES funcionario(id);


--
-- TOC entry 2030 (class 2606 OID 24503009)
-- Name: fkd97iam0ont9m3gpawfbeu1tjx; Type: FK CONSTRAINT; Schema: nuvem; Owner: jmkids
--

ALTER TABLE ONLY funcionarioquiosque
    ADD CONSTRAINT fkd97iam0ont9m3gpawfbeu1tjx FOREIGN KEY (quiosque_id) REFERENCES quiosque(id);


--
-- TOC entry 2034 (class 2606 OID 24503029)
-- Name: fkemxr7twvvh524ebfp9pls6u81; Type: FK CONSTRAINT; Schema: nuvem; Owner: jmkids
--

ALTER TABLE ONLY tabelapreco
    ADD CONSTRAINT fkemxr7twvvh524ebfp9pls6u81 FOREIGN KEY (quiosque_id) REFERENCES quiosque(id);


--
-- TOC entry 2027 (class 2606 OID 24502994)
-- Name: fkh06fkybmoxn64ph3o7mopfuar; Type: FK CONSTRAINT; Schema: nuvem; Owner: jmkids
--

ALTER TABLE ONLY brinquedonoquiosque
    ADD CONSTRAINT fkh06fkybmoxn64ph3o7mopfuar FOREIGN KEY (brinquedo_id) REFERENCES brinquedo(id);


--
-- TOC entry 2031 (class 2606 OID 24503014)
-- Name: fkn9sj9iulobo73f3eikyy5n48x; Type: FK CONSTRAINT; Schema: nuvem; Owner: jmkids
--

ALTER TABLE ONLY promocao
    ADD CONSTRAINT fkn9sj9iulobo73f3eikyy5n48x FOREIGN KEY (grupocliente_id) REFERENCES grupocliente(id);


--
-- TOC entry 2033 (class 2606 OID 24503024)
-- Name: fkslbjr53o5rkmdake5pvjrmq9g; Type: FK CONSTRAINT; Schema: nuvem; Owner: jmkids
--

ALTER TABLE ONLY promocaoquiosque
    ADD CONSTRAINT fkslbjr53o5rkmdake5pvjrmq9g FOREIGN KEY (quiosque_id) REFERENCES quiosque(id);


SET search_path = quiosque, pg_catalog;

--
-- TOC entry 2056 (class 2606 OID 24503139)
-- Name: fk12d4ihpbtjpf72lsqxgskco0l; Type: FK CONSTRAINT; Schema: quiosque; Owner: jmkids
--

ALTER TABLE ONLY cliente
    ADD CONSTRAINT fk12d4ihpbtjpf72lsqxgskco0l FOREIGN KEY (grupocliente_id) REFERENCES nuvem.grupocliente(id);


--
-- TOC entry 2037 (class 2606 OID 24503044)
-- Name: fk2n4se5i0onb5dul9v5bf98s73; Type: FK CONSTRAINT; Schema: quiosque; Owner: jmkids
--

ALTER TABLE ONLY brinquedooperacao
    ADD CONSTRAINT fk2n4se5i0onb5dul9v5bf98s73 FOREIGN KEY (brinquedo_id) REFERENCES nuvem.brinquedo(id);


--
-- TOC entry 2041 (class 2606 OID 24503064)
-- Name: fk3k3up0bda0c3aa2kfucrho2i; Type: FK CONSTRAINT; Schema: quiosque; Owner: jmkids
--

ALTER TABLE ONLY brinquedooperacao
    ADD CONSTRAINT fk3k3up0bda0c3aa2kfucrho2i FOREIGN KEY (funcionarioativou_id) REFERENCES nuvem.funcionario(id);


--
-- TOC entry 2046 (class 2606 OID 24503089)
-- Name: fk3qlh3shml9xfbww6a0xdgw20w; Type: FK CONSTRAINT; Schema: quiosque; Owner: jmkids
--

ALTER TABLE ONLY caixa
    ADD CONSTRAINT fk3qlh3shml9xfbww6a0xdgw20w FOREIGN KEY (quiosque_id) REFERENCES nuvem.quiosque(id);


--
-- TOC entry 2052 (class 2606 OID 24503119)
-- Name: fk61is3sg9g2k65jrhvt5um25cj; Type: FK CONSTRAINT; Schema: quiosque; Owner: jmkids
--

ALTER TABLE ONLY caixamovimento
    ADD CONSTRAINT fk61is3sg9g2k65jrhvt5um25cj FOREIGN KEY (funcionario_id) REFERENCES nuvem.funcionario(id);


--
-- TOC entry 2038 (class 2606 OID 24503049)
-- Name: fk79jxrnd6sod7dbyp6m0rc1ujt; Type: FK CONSTRAINT; Schema: quiosque; Owner: jmkids
--

ALTER TABLE ONLY brinquedooperacao
    ADD CONSTRAINT fk79jxrnd6sod7dbyp6m0rc1ujt FOREIGN KEY (cliente_cpfoucnpj) REFERENCES cliente(cpfoucnpj);


--
-- TOC entry 2036 (class 2606 OID 24503039)
-- Name: fk8pde40tjdsryxoi41mlit0unv; Type: FK CONSTRAINT; Schema: quiosque; Owner: jmkids
--

ALTER TABLE ONLY brinquedooperacao
    ADD CONSTRAINT fk8pde40tjdsryxoi41mlit0unv FOREIGN KEY (caixa_id, quiosque_id) REFERENCES caixa(id, quiosque_id);


--
-- TOC entry 2040 (class 2606 OID 24503059)
-- Name: fkaqcqql0sxeq5to2b17n08betb; Type: FK CONSTRAINT; Schema: quiosque; Owner: jmkids
--

ALTER TABLE ONLY brinquedooperacao
    ADD CONSTRAINT fkaqcqql0sxeq5to2b17n08betb FOREIGN KEY (formaprepago_id) REFERENCES nuvem.formapagamento(id);


--
-- TOC entry 2048 (class 2606 OID 24503099)
-- Name: fkbabr3aj8pulj3fwuyriky9i2d; Type: FK CONSTRAINT; Schema: quiosque; Owner: jmkids
--

ALTER TABLE ONLY caixa
    ADD CONSTRAINT fkbabr3aj8pulj3fwuyriky9i2d FOREIGN KEY (funcionariofechou_id) REFERENCES nuvem.funcionario(id);


--
-- TOC entry 2044 (class 2606 OID 24503079)
-- Name: fkcsiopidp84wd32ji01tljxb6v; Type: FK CONSTRAINT; Schema: quiosque; Owner: jmkids
--

ALTER TABLE ONLY brinquedooperacao
    ADD CONSTRAINT fkcsiopidp84wd32ji01tljxb6v FOREIGN KEY (funcionariopausou_id) REFERENCES nuvem.funcionario(id);


--
-- TOC entry 2050 (class 2606 OID 24503109)
-- Name: fke26683ni2d0t8emqm5uq5iwbg; Type: FK CONSTRAINT; Schema: quiosque; Owner: jmkids
--

ALTER TABLE ONLY caixamovimento
    ADD CONSTRAINT fke26683ni2d0t8emqm5uq5iwbg FOREIGN KEY (caixa_id, quiosque_id) REFERENCES caixa(id, quiosque_id);


--
-- TOC entry 2042 (class 2606 OID 24503069)
-- Name: fkeclag9y5jm8ccw29sgdqrw2m2; Type: FK CONSTRAINT; Schema: quiosque; Owner: jmkids
--

ALTER TABLE ONLY brinquedooperacao
    ADD CONSTRAINT fkeclag9y5jm8ccw29sgdqrw2m2 FOREIGN KEY (funcionariocancelou_id) REFERENCES nuvem.funcionario(id);


--
-- TOC entry 2049 (class 2606 OID 24503104)
-- Name: fkevptr74ejxikvrfpsfinc1j5; Type: FK CONSTRAINT; Schema: quiosque; Owner: jmkids
--

ALTER TABLE ONLY caixamovimento
    ADD CONSTRAINT fkevptr74ejxikvrfpsfinc1j5 FOREIGN KEY (caixa_id, quiosque_id, brinquedooperacao_id) REFERENCES brinquedooperacao(caixa_id, quiosque_id, id);


--
-- TOC entry 2054 (class 2606 OID 24503129)
-- Name: fkfmmc1oh6qetjhqle3rejcgn4n; Type: FK CONSTRAINT; Schema: quiosque; Owner: jmkids
--

ALTER TABLE ONLY caixamovimentodois
    ADD CONSTRAINT fkfmmc1oh6qetjhqle3rejcgn4n FOREIGN KEY (formapagamento_id) REFERENCES nuvem.formapagamento(id);


--
-- TOC entry 2057 (class 2606 OID 24503144)
-- Name: fkggbl2imcv31bsw3o8f5t6n6rp; Type: FK CONSTRAINT; Schema: quiosque; Owner: jmkids
--

ALTER TABLE ONLY clientequiosque
    ADD CONSTRAINT fkggbl2imcv31bsw3o8f5t6n6rp FOREIGN KEY (cliente_cpfoucnpj) REFERENCES cliente(cpfoucnpj);


--
-- TOC entry 2051 (class 2606 OID 24503114)
-- Name: fki1wm4gh6q5ouyh8d9hrgqk4cd; Type: FK CONSTRAINT; Schema: quiosque; Owner: jmkids
--

ALTER TABLE ONLY caixamovimento
    ADD CONSTRAINT fki1wm4gh6q5ouyh8d9hrgqk4cd FOREIGN KEY (formapagamento_id) REFERENCES nuvem.formapagamento(id);


--
-- TOC entry 2045 (class 2606 OID 24503084)
-- Name: fkjrqh97ttpsh3aw4r6u230j07n; Type: FK CONSTRAINT; Schema: quiosque; Owner: jmkids
--

ALTER TABLE ONLY brinquedooperacao
    ADD CONSTRAINT fkjrqh97ttpsh3aw4r6u230j07n FOREIGN KEY (tabelaprecotempo_id) REFERENCES nuvem.tabelaprecotempo(id);


--
-- TOC entry 2043 (class 2606 OID 24503074)
-- Name: fkk99p7v155mpk3f8m4km6rljpw; Type: FK CONSTRAINT; Schema: quiosque; Owner: jmkids
--

ALTER TABLE ONLY brinquedooperacao
    ADD CONSTRAINT fkk99p7v155mpk3f8m4km6rljpw FOREIGN KEY (funcionarioinativou_id) REFERENCES nuvem.funcionario(id);


--
-- TOC entry 2047 (class 2606 OID 24503094)
-- Name: fklfv8dast8d8rlrbcm7xu2at5x; Type: FK CONSTRAINT; Schema: quiosque; Owner: jmkids
--

ALTER TABLE ONLY caixa
    ADD CONSTRAINT fklfv8dast8d8rlrbcm7xu2at5x FOREIGN KEY (funcionarioabriu_id) REFERENCES nuvem.funcionario(id);


--
-- TOC entry 2055 (class 2606 OID 24503134)
-- Name: fkm4j8m4e0ybjgvowgya9f4yq8b; Type: FK CONSTRAINT; Schema: quiosque; Owner: jmkids
--

ALTER TABLE ONLY caixamovimentodois
    ADD CONSTRAINT fkm4j8m4e0ybjgvowgya9f4yq8b FOREIGN KEY (funcionario_id) REFERENCES nuvem.funcionario(id);


--
-- TOC entry 2053 (class 2606 OID 24503124)
-- Name: fkoh3lu6a17uqkmhdn765ccva5s; Type: FK CONSTRAINT; Schema: quiosque; Owner: jmkids
--

ALTER TABLE ONLY caixamovimentodois
    ADD CONSTRAINT fkoh3lu6a17uqkmhdn765ccva5s FOREIGN KEY (caixa_id, quiosque_id) REFERENCES caixa(id, quiosque_id);


--
-- TOC entry 2039 (class 2606 OID 24503054)
-- Name: fkpfm0tt1cm6dynmhjjpite6t56; Type: FK CONSTRAINT; Schema: quiosque; Owner: jmkids
--

ALTER TABLE ONLY brinquedooperacao
    ADD CONSTRAINT fkpfm0tt1cm6dynmhjjpite6t56 FOREIGN KEY (formapospago_id) REFERENCES nuvem.formapagamento(id);


--
-- TOC entry 2058 (class 2606 OID 24503149)
-- Name: fkqr3wn12i939el013s1692hwfx; Type: FK CONSTRAINT; Schema: quiosque; Owner: jmkids
--

ALTER TABLE ONLY clientequiosque
    ADD CONSTRAINT fkqr3wn12i939el013s1692hwfx FOREIGN KEY (quiosque_id) REFERENCES nuvem.quiosque(id);


--
-- TOC entry 2059 (class 2606 OID 24503154)
-- Name: fkt1rxmvuia4cqejcowr4nuw7wo; Type: FK CONSTRAINT; Schema: quiosque; Owner: jmkids
--

ALTER TABLE ONLY inativacaoforcada
    ADD CONSTRAINT fkt1rxmvuia4cqejcowr4nuw7wo FOREIGN KEY (caixa_id, quiosque_id, brinquedooperacao_id) REFERENCES brinquedooperacao(caixa_id, quiosque_id, id);


--
-- TOC entry 2060 (class 2606 OID 24503159)
-- Name: fktkrvo73n7bu0gh56di2esddsq; Type: FK CONSTRAINT; Schema: quiosque; Owner: jmkids
--

ALTER TABLE ONLY inativacaoforcada
    ADD CONSTRAINT fktkrvo73n7bu0gh56di2esddsq FOREIGN KEY (funcionario_id) REFERENCES nuvem.funcionario(id);


--
-- TOC entry 2204 (class 0 OID 0)
-- Dependencies: 6
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


-- Completed on 2019-06-06 09:47:44

--
-- PostgreSQL database dump complete
--

